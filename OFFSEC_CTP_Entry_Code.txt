Email: myemail.com , Registration Code: 22858 | Now decode your CTP Secret Key and you are done! : \x31\xC0\x50\x68\x76\x25\x27\x73\x68\x74\x78\x75\x74\x68\x25\x72\x24\x76\x68\x78\x74\x72\x20\x68\x72\x78\x71\x71\x68\x73\x70\x24\x23\x68\x72\x24\x23\x72\x68\x79\x25\x23\x72\x68\x22\x75\x20\x71\x68\x76\x27\x74\x20\x68\x22\x27\x23\x71\x68\x76\x24\x70\x22\x68\x79\x20\x22\x22\x68\x20\x79\x23\x75\x68\x77\x73\x75\x79\x68\x76\x72\x77\x73\x68\x24\x77\x70\x22\x68\x23\x72\x22\x74\x68\x79\x25\x77\x71\x68\x72\x23\x76\x23\x68\x70\x24\x25\x79\x68\x25\x72\x24\x27\x68\x78\x73\x76\x73\x68\x78\x70\x73\x24\x68\x71\x75\x22\x70\x68\x25\x71\x78\x20\x68\x25\x75\x72\x22\x68\x75\x73\x24\x76\x68\x72\x23\x75\x78\x68\x74\x22\x23\x25\x68\x23\x24\x20\x75\x68\x24\x78\x22\x24\x54\x5E\x8B\xFE\x8B\xD7\xFC\xB9\x80\x00\x00\x00\xBB\x41\x00\x00\x00\x31\xC0\x50\xAC\x33\xC3\xAA\xE2\xFA\x54\x5E\xCC


1: printf "\x31\xC0\x50\x68\x22\x74\x77\x22\x68\x73\x73\x77\x24\x68\x27\x20\x79\x70\x68\x76\x27\x24\x79\x68\x20\x73\x25\x72\x68\x22\x72\x27\x74\x68\x73\x22\x27\x23\x68\x74\x75\x73\x77\x68\x24\x25\x77\x72\x68\x27\x74\x75\x75\x68\x76\x76\x71\x77\x68\x27\x25\x75\x71\x68\x22\x24\x25\x74\x68\x78\x77\x79\x75\x68\x74\x77\x25\x74\x68\x78\x79\x75\x71\x68\x27\x20\x78\x23\x68\x22\x78\x70\x72\x68\x74\x71\x27\x78\x68\x23\x23\x70\x71\x68\x71\x79\x71\x23\x68\x74\x23\x23\x27\x68\x72\x27\x71\x72\x68\x22\x70\x76\x79\x68\x20\x20\x77\x71\x68\x25\x75\x25\x20\x68\x22\x20\x23\x75\x68\x79\x25\x72\x73\x68\x23\x27\x76\x74\x68\x78\x78\x75\x27\x68\x25\x27\x20\x20\x68\x27\x75\x25\x76\x54\x5E\x8B\xFE\x8B\xD7\xFC\xB9\x80\x00\x00\x00\xBB\x41\x00\x00\x00\x31\xC0\x50\xAC\x33\xC3\xAA\xE2\xFA\x54\x5E\xCC"| ndisasm -u -| awk 'match($0,/[a-z,A-Z]{3}.*/)  {print substr($0,RSTART,RLENGTH)}' > sbshellcode.asm; vim sbshellcode.asm

2: if executing printf on linux edit the nasm to remove addresses ie : 0000005D  6874712778
else on mac it works fine....

3: if missing add global start item
global _start
_start:

4: review the assembly and add a function pointer if needed i.e.
balls:
lodsb
xor eax,ebx
stosb
loop balls

5: nasm -f elf sbshellcode.asm -g

6: (linux only) ld -m elf_i386 -o gettheFeckingKey sbshellcode.o

7: gdb ./gettheFeckingKey

8: gdb>l

9: gdb>b 52
set the breakpoint on the pop esi

10: gdb>run

11: gdb>x/09s $esp
--- note x/number of lines s string dollar esp shows esp register.
returns key = 
f4d7dfaa994fbf758d32cab4d4daaa60c1783f035bbf080bbb1050f9c913fa9b984056d59684ced5fd407706f544ed6354262cfbc3f5a2d37fe8fa81226ec56c


ASM CODE MODIFIED AT LOOP AND GLOBAL

global _start
_start:
xor eax,eax
push eax
push dword 0x22777422
push dword 0x24777373
push dword 0x70792027
push dword 0x79242776
push dword 0x72257320
push dword 0x74277222
push dword 0x23272273
push dword 0x77737574
push dword 0x72772524
push dword 0x75757427
push dword 0x77717676
push dword 0x71752527
push dword 0x74252422
push dword 0x75797778
push dword 0x74257774
push dword 0x71757978
push dword 0x23782027
push dword 0x72707822
push dword 0x78277174
push dword 0x71702323
push dword 0x23717971
push dword 0x27232374
push dword 0x72712772
push dword 0x79767022
push dword 0x71772020
push dword 0x20257525
push dword 0x75232022
push dword 0x73722579
push dword 0x74762723
push dword 0x27757878
push dword 0x20202725
push dword 0x76257527
push esp
pop esi
mov edi,esi
mov edx,edi
cld
mov ecx,0x80
mov ebx,0x41
xor eax,eax
push eax
balls:
lodsb
xor eax,ebx
stosb
loop balls
push esp
pop esi
int3
